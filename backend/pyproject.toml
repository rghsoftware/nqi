[project]
name = "nqi-backend"
version = "0.1.0"
description = "Neural Quest Interface - Backend API"
readme = "README.md"
requires-python = ">=3.11"
license = { text = "AGPL-3.0" }
authors = [{ name = "Robert Hamilton", email = "robert@rghsoftware.com" }]
dependencies = [
  "alembic>=1.16.4",
  "argon2-cffi>=25.1.0",
  "asyncpg>=0.30.0",
  "celery>=5.5.3",
  "fastapi>=0.116.1",
  "httpx>=0.28.1",
  "passlib>=1.7.4",
  "pgvector>=0.4.1",
  "pydantic>=2.11.7",
  "pydantic-settings>=2.10.1",
  "python-jose[cryptography]>=3.5.0",
  "python-multipart>=0.0.20",
  "redis>=6.4.0",
  "sqlalchemy>=2.0.43",
  "uvicorn[standard]>=0.35.0",
]

[dependency-groups]
dev = [
  "black>=25.1.0",
  "factory-boy>=3.3.3",
  "faker>=37.5.3",
  "httpx>=0.28.1",
  "mypy>=1.17.1",
  "pre-commit>=4.3.0",
  "pytest>=8.4.1",
  "pytest-asyncio>=1.1.0",
  "pytest-cov>=6.2.1",
  "pytest-mock>=3.14.1",
  "ruff>=0.12.9",
  "sqlalchemy[mypy]>=2.0.43",
  "types-passlib>=1.7.7.20250602",
  "types-python-jose>=3.5.0.20250531",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.uv]
dev-dependencies = ["ipython>=8.17.0", "rich>=13.7.0"]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
  "E",   # pycodestyle errors
  "W",   # pycodestyle warnings
  "F",   # pyflakes
  "I",   # isort
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "UP",  # pyupgrade
  "ARG", # flake8-unused-arguments
  "SIM", # flake8-simplify
]
ignore = [
  "E501", # line too long (handled by formatter)
  "B008", # do not perform function calls in argument defaults
  "C901", # too complex
]
exclude = [
  ".git",
  "__pycache__",
  "build",
  "dist",
  ".venv",
  "venv",
  "*.egg-info",
  ".mypy_cache",
  ".pytest_cache",
  "alembic/versions",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["app"]

[tool.mypy]
python_version = "3.11"
plugins = ["pydantic.mypy", "sqlalchemy.ext.mypy.plugin"]
ignore_missing_imports = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["."]
addopts = ["--strict-markers", "--tb=short", "--asyncio-mode=auto"]

[tool.coverage.run]
source = ["app"]
omit = ["*/tests/*", "*/alembic/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "if self.debug:",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
